
Rob's Viewdata Viewer Class.  The Documentation.

Project home page: http://code.google.com/p/viewdataviewer/
Alternate information: http://www.irrelevant.com/vv/

The vv.php, vl.php and vb.php codebase grew to the state it's in very
organically, and without any proper design.  This re-write of the core code
is intended to address this, and produce a proper API for accessing original-
format viewdata page files.

This should ensure that the application programmes can deal with viewdata
format files without any need to know themselves about the format.  This will
avoid the situation in place with the above mentioned routines where each
addresses different aspects of some files, with much duplication and some
contradiction.

current version 0.6.0 - 2011-02-06 (pre-alpha incomplete functionality.)

include "vv.class.php";
defines a number of constants defining viewdata types and modifiers.
function vvtypes($val)  returns string relating to type specified, or FALSE.

Class ViewdataViewer.

$vfile = new ViewdataViewer()

$vfile->LoadFile($file, $hint = 0, $fsp = "")
$vfile->LoadData($text, $hint = 0, $fsp = "")
		$file - path/file to load
		$text - use previously sourced text
		$hint - supposed format of this file
		$fsp - original name of file
	returns:
		TRUE - file loaded and analysed
		FALSE - file not found or of unrecognised type

$vfile->format - format of file
$vfile->framesfound - number of frames found within file
$vfile->frameindex = array(key=>Array(..)) - frame contents information.

		note that key may not necesarilly be 0,1,2,3 etc, especially where files
		contain interlinked pages!  Expect such as "1a" "ss.0a"  ..
		use array_keys() to get the list.
		use these as $idx parameters in functions below:

$vfile->ReturnMetaData($idx, $param)
		$idx - key to frame within file (see above)  NULL for first(or only)
		$param - metadata item required, e.g. "route0".
	returns:
		value of paramater
		FALSE - no such frame or parameter for this frame type

	Different frame formats support different ranges of parameters. Many support
	none, especially for frames saved out by client terminal programmes.


$vfile->ReturnScreen($idx,$mode)
		$idx - key to frame within file (see above)  NULL for first(or only)
		$mode - "internal" - screendata in 7bit internal format.
				"simple" - screen data with control codes only removed
				"text" - plain text, all graphics ommitted.
				"stars" - text with graphics replaced by *.
				"html" - best attempt html version of image. 	TODO
				"imagetype" - return type of image available.
				"image" - image. may be GIF or PNG .....!
	returns:
		item requested
			for imagetype, this might be "png", "gif"
		FALSE - no such frame or invalid mode.


METADATA
--------

Attrib\type:| MODE7 | GNOME |  RAW  |ABZTTXT| AXIS  | AXISI |SVREADR| PLUS3 |  EPX  |  EP1  |  TT   | JCC   |
-------------------------------------------------------------------------------------------------------------
 flags*     |       |  y    |       |       |       |       |       |       |       |       |       |       |
 CUG        |       |  y    |       |       |       |       |       |       |       |       |       |       |
 access     |       |  y    |       |       |       |       |       |       |       |       |       |       |
 type       |       |  y    |       |       |       |       |       |       |       |       |       |       |
 count      |       |  y    |       |       |       |       |       |       |       |       |       |       |
 route 0    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 1    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 2    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 3    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 4    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 5    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 6    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 7    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 8    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route 9    |       |  y    |       |       |       |   y   |       |       |       |       |       |       |
 route #    |       |       |       |       |       |       |       |       |       |       |       |       |
 ip         |       |  x    |       |       |       |       |       |       |       |       |       |       |
 owner*     |       |  x    |       |       |       |       |       |       |       |       |       |       |
 editcug    |       |  y    |       |       |       |       |       |       |       |       |       |       |
 pagenumber |       |  x    |       |       |  y    |  y    |       |       |       |       |       |       |


y-supported. x-supported but may not be available. e-estimated value.
*-liable to be a format-specific value.
pagenumber should be the original page number, not necesarilly the filename.

CHANGELOG
---------
new in vv.class.php 0.6.0   Initial alpha release

new in vv.class.php 0.6.1	Bugfix 'raw' mode.

new in vv.class.php 0.6.2   correct height for EP1 and EPX files.
						    finish analysis of both Axis formats.
						    bugfix axis format conversion.

new in vvclassdemo.php 1.0.1 include list of frames within file.